{"version":3,"sources":["img/no-messages.png","img/cherry-online-service.png","Components/Results.js","Components/SearchBar.js","Components/Home.js","Components/Repo.js","config/routes.js","styles/theme.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","maxWidth","customLink","color","palette","text","main","textDecoration","media","marginTop","spacing","height","mediaStart","Results","props","repos","user","message","classes","listRepos","Box","display","flexDirection","alignItems","className","CardMedia","image","imageUrl","length","map","item","to","pathname","full_name","List","component","aria-label","ListItem","button","ListItemIcon","ListItemText","primary","name","id","imageUrlStart","Grid","container","direction","justify","heroButtons","clear","backgroundColor","buttons","action","hover","boxShadow","blue","selected","borderColor","paper","form","submit","margin","SearchBar","location","useLocation","history","useHistory","useState","searchInput","setSearchInput","setRepos","searchedUser","setSearchedUser","setIfError","errorMessage","setErrorMessage","useEffect","userFromParams","URLSearchParams","search","get","searchUser","a","axios","result","data","push","console","log","handleSearch","e","preventDefault","Container","CssBaseline","noValidate","autoComplete","onSubmit","xs","TextField","label","variant","fullWidth","type","value","onChange","target","InputProps","endAdornment","InputAdornment","position","Button","onClick","Home","transition","background","content","flex","avatar","center","justifyContent","fontSize","default","noLink","Repo","useParams","author","languages","setLanguages","userAvatar","setUserAvatar","repoUrl","setRepoUrl","handleBack","useCallback","resultLang","languageAr","Object","keys","resultAuth","avatar_url","Card","CardContent","CardHeader","Avatar","title","href","Typography","fontWeight","m","join","PATHS","createMuiTheme","overrides","MuiInputLabel","secondary","App","ThemeProvider","basename","window","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAAe,MAA0B,wCCA1B,MAA0B,kD,yFCmBnCA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,OACPC,SAAU,KAEZC,WAAY,CACVC,MAAOL,EAAMM,QAAQC,KAAKC,KAC1BC,eAAgB,QAElBC,MAAO,CACLC,UAAWX,EAAMY,QAAQ,GACzBV,MAAO,QACPW,OAAQ,SAEVC,WAAY,CACVZ,MAAO,QACPW,OAAQ,aA6DGE,EAzDC,SAACC,GAAW,IAClBC,EAAyBD,EAAzBC,MAAOC,EAAkBF,EAAlBE,KAAMC,EAAYH,EAAZG,QACfC,EAAUtB,IACZuB,EAAY,GA+ChB,OA5CEA,EADa,aAAXF,EAEA,eAACG,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAASC,WAAW,SAAtD,UACE,gDACA,qBAAKC,UAAWN,EAAQV,MAAxB,SACE,cAACiB,EAAA,EAAD,CAAWD,UAAWN,EAAQV,MAAOkB,MAAOC,SAIxB,IAAjBZ,EAAMa,OACHb,EAAMc,KAAI,SAACC,GAAD,OACpB,cAAC,IAAD,CACEN,UAAWN,EAAQhB,WACnB6B,GAAI,CAAEC,SAAS,SAAD,OAAWF,EAAKG,YAFhC,SAKE,qBAAKT,UAAWN,EAAQnB,KAAxB,SACE,cAACmC,EAAA,EAAD,CAAMC,UAAU,MAAMC,aAAW,gBAAjC,SACE,eAACC,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,EAAA,EAAD,CAAcf,UAAWN,EAAQhB,WAAjC,SACE,cAAC,IAAD,MAEF,cAACsC,EAAA,EAAD,CAAcC,QAASX,EAAKY,eAR7BZ,EAAKa,OAcJ3B,EAQR,eAACI,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAASC,WAAW,SAAtD,UACE,4CACA,qBAAKC,UAAWN,EAAQV,MAAxB,SACE,cAACiB,EAAA,EAAD,CAAWD,UAAWN,EAAQV,MAAOkB,MAAOC,SAThD,qBAAKH,UAAWN,EAAQN,WAAxB,SACE,cAACa,EAAA,EAAD,CAAWD,UAAWN,EAAQN,WAAYc,MAAOkB,MAerD,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASxB,WAAW,SAASyB,QAAQ,SAA/D,SACE,mCAAM7B,EAAN,U,8DC5EAvB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCmD,YAAa,CACXxC,UAAWX,EAAMY,QAAQ,IAE3BwC,MAAO,CACL,UAAW,CACTC,gBAAiBrD,EAAMM,QAAQgD,QAAQC,OAAOC,MAC9CC,UAAW,SAGfC,KAAM,CACJL,gBAAiBrD,EAAMM,QAAQgD,QAAQC,OAAOI,SAC9CC,YAAa5D,EAAMM,QAAQgD,QAAQC,OAAOI,SAC1C,UAAW,CACTN,gBAAiB,UACjBO,YAAa,UACbH,UAAW,SAGfrD,WAAY,CACVK,eAAgB,QAElBoD,MAAO,CACLlD,UAAWX,EAAMY,QAAQ,GACzBW,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdqC,KAAM,CACJnD,UAAWX,EAAMY,QAAQ,GACzBV,MAAO,QAET6D,OAAQ,CACNC,OAAQhE,EAAMY,QAAQ,EAAG,EAAG,IAE9BX,KAAM,CACJC,MAAO,QACPmD,gBAAiB,UACjBhD,MAAOL,EAAMM,QAAQgD,QAAQC,OAAOI,cA+GzBM,MA5Gf,WACE,IAAMC,EAAWC,cACXC,EAAUC,cAFG,EAGmBC,mBAAS,IAH5B,mBAGZC,EAHY,KAGCC,EAHD,OAIOF,mBAAS,IAJhB,mBAIZrD,EAJY,KAILwD,EAJK,OAKqBH,mBAAS,MAL9B,mBAKZI,EALY,KAKEC,EALF,OAMWL,oBAAS,GANpB,mBAMHM,GANG,aAOqBN,mBAAS,IAP9B,mBAOZO,EAPY,KAOEC,EAPF,KAQb1D,EAAUtB,IAChBiF,qBAAU,WAER,IACMC,EADS,IAAIC,gBAAgBf,EAASgB,QACdC,IAAI,SAC9BH,IACFR,EAAeQ,GACfI,EAAWJ,MAEZ,IACH,IAAMI,EAAU,uCAAG,WAAOlE,GAAP,eAAAmE,EAAA,sEAEfT,GAAW,GAFI,SAGMU,IAAM,gCAAD,OAAiCpE,EAAjC,WAHX,OAGTqE,EAHS,OAIfd,EAASc,EAAOC,MAChBb,EAAgBzD,GAEhBkD,EAAQqB,KAAK,CAAEP,OAAO,UAAD,OAAYhE,KAPlB,kDASfwE,QAAQC,IAAI,KAAMxE,SAClByD,GAAW,IACN,KAAMzD,QAAU,aACnB2D,EAAgB,aAEhBA,EAAgB,wBAdH,0DAAH,sDAqBVc,EAAe,SAACC,GACpBf,EAAgB,KAChBe,EAAEC,iBACFV,EAAWb,IAQb,OACE,eAACwB,EAAA,EAAD,CAAW1D,UAAU,OAAOlC,SAAS,KAArC,UACE,cAAC6F,EAAA,EAAD,IACA,qBAAKtE,UAAWN,EAAQyC,MAAxB,SACE,uBAAMoC,YAAU,EAACC,aAAa,MAAMC,SAAUP,EAA9C,UACE,cAAC7C,EAAA,EAAD,CAAMC,WAAS,EAACpC,QAAS,EAAzB,SACE,cAACmC,EAAA,EAAD,CAAMf,MAAI,EAACoE,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACE3E,UAAWN,EAAQnB,KACnB4C,GAAG,iBACHyD,MAAM,mBACNC,QAAQ,WACRC,WAAS,EACTC,KAAK,OACLC,MAAOnC,EACPoC,SA7BO,SAACd,GACpBrB,EAAeqB,EAAEe,OAAOF,QA6BZG,WAAY,CACVC,aACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SACE,cAAC,IAAD,aAOZ,qBAAKtF,UAAWN,EAAQ+B,YAAxB,SACE,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACpC,QAAS,EAAGsC,QAAQ,SAApC,UACE,cAACH,EAAA,EAAD,CAAMf,MAAI,EAAV,SACE,cAACiF,EAAA,EAAD,CACEV,QAAQ,YACRW,QAAStB,EACTa,KAAK,SACL/E,UAAWN,EAAQsC,KAJrB,sBASF,cAACX,EAAA,EAAD,CAAMf,MAAI,EAAV,SACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAU,KAEZR,UAAWN,EAAQhB,WAJrB,SAME,cAAC6G,EAAA,EAAD,CAAQV,QAAQ,YAAYW,QAnDxB,WAClB1C,EAAe,IACfC,EAAS,IACTE,EAAgB,MAChBG,EAAgB,MA+CgDpD,UAAWN,EAAQgC,MAArE,iCASZ,cAAC,EAAD,CAASnC,MAAOA,EAAOC,KAAMwD,EAAcvD,QAAS0D,QCpJ3CsC,EARF,WACX,OACE,cAACpE,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASxB,WAAW,SAASyB,QAAQ,SAA/D,SACE,cAAC,EAAD,O,4CCWApD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJU,UAAWX,EAAMY,QAAQ,GACzBW,QAAS,OACTyC,OAAQ,OACRoD,WAAY,OACZ3D,UAAW,mCACX4D,WAAY,4BAEdC,QAAS,CACPC,KAAM,WACN/F,cAAe,UAGjBd,MAAO,CACLR,MAAO,KAETsH,OAAQ,CACNtH,MAAOF,EAAMY,QAAQ,GACrBC,OAAQb,EAAMY,QAAQ,IAExB4B,OAAQ,CACN7B,UAAWX,EAAMY,QAAQ,GACzB,UAAW,CACTyC,gBAAiBrD,EAAMM,QAAQgD,QAAQC,OAAOC,MAC9CC,UAAW,SAGfgE,OAAQ,CACNlG,QAAS,OACTC,cAAe,SACfC,WAAY,SACZiG,eAAgB,UAElBtH,WAAY,CACVuH,SAAU,SACVtH,MAAOL,EAAMM,QAAQ+G,WAAWO,SAElCC,OAAQ,CACNpH,eAAgB,YAiELqH,EA7DF,WAAO,IAAD,EACQC,cAAjBC,EADS,EACTA,OAAQpF,EADC,EACDA,KADC,EAEiB0B,mBAAS,IAF1B,mBAEV2D,EAFU,KAECC,EAFD,OAGmB5D,mBAAS,IAH5B,mBAGV6D,EAHU,KAGEC,EAHF,OAIa9D,mBAAS,IAJtB,mBAIV+D,EAJU,KAIDC,EAJC,KAKXlH,EAAUtB,IACVsE,EAAUC,cAEVkE,EAAaC,uBAAY,kBAAMpE,EAAQqB,KAAR,kBAAwBuC,MAAW,CAAC5D,IAazE,OAZAW,oBAAS,sBAAC,gCAAAM,EAAA,+EAEmBC,IAAM,gCAAD,OAAiC0C,EAAjC,YAA2CpF,EAA3C,eAFxB,cAEA6F,EAFA,OAIgB,KADhBC,EAAaC,OAAOC,KAAKH,EAAWjD,OAC/B1D,OAAeoG,EAAaQ,GAAcR,EAAa,CAAC,sBAJ7D,SAKmB5C,IAAM,gCAAD,OAAiC0C,IALzD,OAKAa,EALA,OAMNT,EAAcS,EAAWrD,KAAKsD,YAC9BR,EAAW,sBAAD,OAAuBN,EAAvB,YAAiCpF,IAPrC,kDASN8C,QAAQC,IAAR,MATM,0DAWP,IAED,eAACI,EAAA,EAAD,CAAWrE,UAAWN,EAAQqG,OAAQpF,UAAU,OAAOlC,SAAS,KAAhE,UACE,cAAC6F,EAAA,EAAD,IACA,eAAC+C,EAAA,EAAD,CAAMrH,UAAWN,EAAQnB,KAAzB,UACE,eAAC+I,EAAA,EAAD,CAAatH,UAAWN,EAAQkG,QAAhC,UACE,cAAC2B,EAAA,EAAD,CACEzB,OACE,cAAC0B,EAAA,EAAD,CAAQ5G,aAAW,eAAeZ,UAAWN,EAAQoG,OAArD,SACGQ,EAAO,KAGZmB,MACE,mBAAGvC,OAAO,QAAQwC,KAAMf,EAAS3G,UAAWN,EAAQhB,WAApD,SACGwC,MAIP,eAACyG,EAAA,EAAD,CAAY9C,QAAQ,QAAQlG,MAAM,gBAAgBgC,UAAU,IAA5D,gBAEE,cAACf,EAAA,EAAD,CAAKgI,WAAW,iBAAiBC,EAAG,EAAGhI,QAAQ,SAA/C,oBAFF,MAKMyG,EALN,IAKc,uBALd,OAOE,cAAC1G,EAAA,EAAD,CAAKgI,WAAW,iBAAiBC,EAAG,EAAGhI,QAAQ,SAA/C,uBAPF,QAUQ0G,EAAUuB,KAAK,YAGzB,cAAC7H,EAAA,EAAD,CAAWD,UAAWN,EAAQV,MAAOkB,MAAOuG,EAAYgB,MAAM,cAEhE,8BACE,cAAClC,EAAA,EAAD,CAAQV,QAAQ,YAAY7E,UAAWN,EAAQoB,OAAQ0E,QAASqB,EAAhE,wBCnHKkB,EACL,IADKA,EAEL,sB,iBC8BOzJ,EA9BD0J,YAAe,CAC3BC,UAAW,CACTC,cAAe,CACb3J,KAAM,CACJI,MAAO,2BACP,WAAY,CACV,YAAa,CACXA,MAAO,eAMjBC,QAAS,CACPmG,KAAM,OACN9D,QAAS,CACPnC,KAAM,WAER8C,QAAS,CACPC,OAAQ,CACNI,SAAU,UACVH,MAAO,6BAGXjD,KAAM,CACJsJ,UAAW,UACXrJ,KAAM,+BCNGsJ,MAbf,WACE,OACE,cAACC,EAAA,EAAD,CAAe/J,MAAOA,EAAtB,SACE,cAAC,IAAD,CAAegK,SAAUC,OAAO/F,SAAShC,UAAY,GAArD,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgI,OAAK,EAACC,KAAMV,EAAYpH,UAAW8E,IAC1C,cAAC,IAAD,CAAOgD,KAAMV,EAAYpH,UAAWyF,YCH/BsC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCGdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAChB,EAAA,EAAD,CAAe/J,MAAOA,EAAtB,SACE,cAACgG,EAAA,EAAD,UACE,cAAC,EAAD,UAINgF,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.c23846f9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/no-messages.ca44d631.png\";","export default __webpack_public_path__ + \"static/media/cherry-online-service.07215af7.png\";","/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable react/jsx-key */\r\n/* eslint react/prop-types: 0 */\r\nimport React from 'react';\r\nimport imageUrl from '../img/no-messages.png';\r\nimport imageUrlStart from '../img/cherry-online-service.png';\r\nimport { Link } from 'react-router-dom';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport {\r\n  makeStyles,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Grid,\r\n  CardMedia,\r\n  Box,\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n  },\r\n  customLink: {\r\n    color: theme.palette.text.main,\r\n    textDecoration: 'none',\r\n  },\r\n  media: {\r\n    marginTop: theme.spacing(1),\r\n    width: '150px',\r\n    height: '180px',\r\n  },\r\n  mediaStart: {\r\n    width: '270px',\r\n    height: '210px',\r\n  },\r\n}));\r\n\r\nconst Results = (props) => {\r\n  const { repos, user, message } = props;\r\n  const classes = useStyles();\r\n  let listRepos = [];\r\n\r\n  if (message == 'Not found') {\r\n    listRepos = (\r\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n        <span>No such user</span>\r\n        <div className={classes.media}>\r\n          <CardMedia className={classes.media} image={imageUrl} />\r\n        </div>\r\n      </Box>\r\n    );\r\n  } else if (repos.length !== 0) {\r\n    listRepos = repos.map((item) => (\r\n      <Link\r\n        className={classes.customLink}\r\n        to={{ pathname: `/repo/${item.full_name}` }}\r\n        key={item.id}\r\n      >\r\n        <div className={classes.root}>\r\n          <List component=\"nav\" aria-label=\"list of repos\">\r\n            <ListItem button>\r\n              <ListItemIcon className={classes.customLink}>\r\n                <GitHubIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={item.name} />\r\n            </ListItem>\r\n          </List>\r\n        </div>\r\n      </Link>\r\n    ));\r\n  } else if (!user) {\r\n    listRepos = (\r\n      <div className={classes.mediaStart}>\r\n        <CardMedia className={classes.mediaStart} image={imageUrlStart} />\r\n      </div>\r\n    );\r\n  } else {\r\n    listRepos = (\r\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n        <span>No repos</span>\r\n        <div className={classes.media}>\r\n          <CardMedia className={classes.media} image={imageUrl} />\r\n        </div>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n      <h2> {listRepos} </h2>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","/* eslint-disable react/jsx-no-undef */\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport Results from './Results';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {\r\n  InputAdornment,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Grid,\r\n  makeStyles,\r\n  Container,\r\n} from '@material-ui/core';\r\nconst useStyles = makeStyles((theme) => ({\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  clear: {\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.buttons.action.hover,\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  blue: {\r\n    backgroundColor: theme.palette.buttons.action.selected,\r\n    borderColor: theme.palette.buttons.action.selected,\r\n    '&:hover': {\r\n      backgroundColor: '#5095b5',\r\n      borderColor: '#5095b5',\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  customLink: {\r\n    textDecoration: 'none',\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    marginTop: theme.spacing(3),\r\n    width: '100%',\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  root: {\r\n    width: '300px',\r\n    backgroundColor: '#424242',\r\n    color: theme.palette.buttons.action.selected,\r\n  },\r\n}));\r\nfunction SearchBar() {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [searchInput, setSearchInput] = useState('');\r\n  const [repos, setRepos] = useState([]);\r\n  const [searchedUser, setSearchedUser] = useState(null);\r\n  const [ifError, setIfError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    // get user URL and search for his/her repositoreis when the page load\r\n    const params = new URLSearchParams(location.search);\r\n    const userFromParams = params.get('query');\r\n    if (userFromParams) {\r\n      setSearchInput(userFromParams);\r\n      searchUser(userFromParams);\r\n    }\r\n  }, []);\r\n  const searchUser = async (user) => {\r\n    try {\r\n      setIfError(false);\r\n      const result = await axios(`https://api.github.com/users/${user}/repos`);\r\n      setRepos(result.data);\r\n      setSearchedUser(user);\r\n      // type user into URL on clicking\r\n      history.push({ search: `?query=${user}` });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n      setIfError(true);\r\n      if ((error.message = 'Not found')) {\r\n        setErrorMessage('Not found');\r\n      } else {\r\n        setErrorMessage('Something went wrong');\r\n      }\r\n    }\r\n  };\r\n  const handleChange = (e) => {\r\n    setSearchInput(e.target.value);\r\n  };\r\n  const handleSearch = (e) => {\r\n    setErrorMessage(' ');\r\n    e.preventDefault();\r\n    searchUser(searchInput);\r\n  };\r\n  const handleClear = () => {\r\n    setSearchInput('');\r\n    setRepos([]);\r\n    setSearchedUser(null);\r\n    setErrorMessage(' ');\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <form noValidate autoComplete=\"off\" onSubmit={handleSearch}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                className={classes.root}\r\n                id=\"outlined-basic\"\r\n                label=\"GitHub user name\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                type=\"text\"\r\n                value={searchInput}\r\n                onChange={handleChange}\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <SearchIcon />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <div className={classes.heroButtons}>\r\n            <Grid container spacing={2} justify=\"center\">\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  onClick={handleSearch}\r\n                  type=\"submit\"\r\n                  className={classes.blue}\r\n                >\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link\r\n                  to={{\r\n                    pathname: '/',\r\n                  }}\r\n                  className={classes.customLink}\r\n                >\r\n                  <Button variant=\"contained\" onClick={handleClear} className={classes.clear}>\r\n                    Clear\r\n                  </Button>\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <Results repos={repos} user={searchedUser} message={errorMessage} />\r\n    </Container>\r\n  );\r\n}\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n      <SearchBar />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardMedia,\r\n  CardContent,\r\n  Avatar,\r\n  Typography,\r\n  Container,\r\n  CssBaseline,\r\n  Button,\r\n  makeStyles,\r\n  Box,\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    margin: 'auto',\r\n    transition: '0.3s',\r\n    boxShadow: '0 8px 40px -12px rgba(0,0,0,0.3)',\r\n    background: 'rgba(255, 255, 255, 0.7)',\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n    flexDirection: 'column',\r\n  },\r\n\r\n  media: {\r\n    width: 170,\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(6),\r\n    height: theme.spacing(6),\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(6),\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.buttons.action.hover,\r\n      boxShadow: 'none',\r\n    },\r\n  },\r\n  center: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  customLink: {\r\n    fontSize: '1.5rem',\r\n    color: theme.palette.background.default,\r\n  },\r\n  noLink: {\r\n    textDecoration: 'none',\r\n  },\r\n}));\r\n\r\nconst Repo = () => {\r\n  const { author, name } = useParams();\r\n  const [languages, setLanguages] = useState([]);\r\n  const [userAvatar, setUserAvatar] = useState([]);\r\n  const [repoUrl, setRepoUrl] = useState([]);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  //useCallback retuerns memorized function versiion, which changes only when URL history changes\r\n  const handleBack = useCallback(() => history.push(`/?query=${author}`), [history]);\r\n  useEffect(async () => {\r\n    try {\r\n      const resultLang = await axios(`https://api.github.com/repos/${author}/${name}/languages`);\r\n      const languageAr = Object.keys(resultLang.data);\r\n      languageAr.length !== 0 ? setLanguages(languageAr) : setLanguages(['No used languages']);\r\n      const resultAuth = await axios(`https://api.github.com/users/${author}`);\r\n      setUserAvatar(resultAuth.data.avatar_url);\r\n      setRepoUrl(`https://github.com/${author}/${name}`);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n  return (\r\n    <Container className={classes.center} component=\"main\" maxWidth=\"md\">\r\n      <CssBaseline />\r\n      <Card className={classes.root}>\r\n        <CardContent className={classes.content}>\r\n          <CardHeader\r\n            avatar={\r\n              <Avatar aria-label=\"first letter\" className={classes.avatar}>\r\n                {author[0]}\r\n              </Avatar>\r\n            }\r\n            title={\r\n              <a target=\"blank\" href={repoUrl} className={classes.customLink}>\r\n                {name}\r\n              </a>\r\n            }\r\n          />\r\n          <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\r\n            The\r\n            <Box fontWeight=\"fontWeightBold\" m={1} display=\"inline\">\r\n              author\r\n            </Box>\r\n            is {author} <br />\r\n            Used\r\n            <Box fontWeight=\"fontWeightBold\" m={1} display=\"inline\">\r\n              languages\r\n            </Box>\r\n            are: {languages.join(', ')}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardMedia className={classes.media} image={userAvatar} title=\"avatar\" />\r\n      </Card>\r\n      <div>\r\n        <Button variant=\"contained\" className={classes.button} onClick={handleBack}>\r\n          Back\r\n        </Button>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\nexport default Repo;\r\n","export const PATHS = {\r\n  HOME: '/',\r\n  REPO: '/repo/:author/:name',\r\n};\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  overrides: {\r\n    MuiInputLabel: {\r\n      root: {\r\n        color: 'rgba(255, 255, 255, 0.7)',\r\n        '&$shrink': {\r\n          '&$focused': {\r\n            color: '#59aad1',\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      main: '#59aad1',\r\n    },\r\n    buttons: {\r\n      action: {\r\n        selected: '#59aad1',\r\n        hover: 'rgba(255, 255, 255, 0.5)',\r\n      },\r\n    },\r\n    text: {\r\n      secondary: '#424242',\r\n      main: 'rgba(255, 255, 255, 0.7)',\r\n    },\r\n  },\r\n});\r\nexport default theme;\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport Home from './Components/Home';\r\nimport Repo from './Components/Repo';\r\nimport { PATHS } from './config/routes';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport theme from './styles/theme';\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <BrowserRouter basename={window.location.pathname || ''}>\r\n        <Switch>\r\n          <Route exact path={PATHS.HOME} component={Home} />\r\n          <Route path={PATHS.REPO} component={Repo} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'fontsource-roboto';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport theme from './styles/theme';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline>\r\n        <App />\r\n      </CssBaseline>\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}